type User {
    id: ID!
    gamertag: String!
    firstName: String!
    lastName: String!
    fullName: String!
    email: String! # TODO create an email scalar here
    wins: Int!
    losses: Int!
    createdAt: Date!
    updatedAt: Date!
    avatar: String!
    awards(limit: Int!, offset: Int!): AwardsResponse!
    currentTeam: Team
    teamHistory: [Team!]!
    titleHistory: [TitleChange!]!
    consolesOwned: [Console!]!
}

input CreateUserInput {
    firstName: String!
    lastName: String!
    gamertag: String!
    email: String!
}

input UpdateUserInput {
    userId: ID!
    firstName: String!
    lastName: String!
    gamertag: String!
    email: String!
}

type UsersList implements PaginatedResponse {
    offset: Int!
    limit: Int!
    total: Int!
    data: [User!]!
}

union UsersResponse = UsersList | ApiError
union UserResponse = User | ApiError
